services:
  backend:
    container_name: riskvision-api
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3333:3333"
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "3333", "--app-dir", "src"]
    environment:
      DATABASE_URL: ${DATABASE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      JWT_SECRET: ${JWT_SECRET}
      PYTHONIOENCODING: utf-8
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
    networks:
      - riskvision-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3333/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    container_name: riskvision-web
    build:
      context: ../riskvision-web
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      # Se preferir, troque wget por curl se estiver dispon√≠vel na imagem
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 25s
    environment:
      - API_URL=http://backend:3333
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:3333
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - riskvision-network

  portainer:
    image: portainer/portainer-ce
    container_name: portainer-riskvision
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - riskvision-network

volumes:
  portainer_data:

networks:
  riskvision-network:
    driver: bridge
